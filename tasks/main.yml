---
# tasks file for nomad

- name: import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

- name: install nomad
  ansible.builtin.package:
    name: nomad
    state: present
  when:
    - nomad_install_package

- name: create nomad_config_dir
  ansible.builtin.file:
    path: "{{ nomad_config_dir }}"
    state: directory
    mode: "0750"
    owner: nomad
    group: nomad

- name: create nomad_data_dir
  ansible.builtin.file:
    path: "{{ nomad_data_dir }}"
    state: directory
    mode: "0755"
    owner: nomad
    group: nomad

- name: configure nomad
  ansible.builtin.template:
    src: nomad.hcl.j2
    dest: "{{ nomad_config_dir }}/nomad.hcl"
    mode: "0640"
    owner: nomad
    group: nomad
  notify:
    - restart nomad

- name: configure nomad environment
  ansible.builtin.template:
    src: nomad.env.j2
    dest: "{{ nomad_config_dir }}/nomad.env"
    mode: "0640"
    owner: nomad
    group: nomad
  notify:
    - restart nomad

- name: delete server config if it is not defined
  ansible.builtin.file:
    path: "{{ nomad_config_dir }}/server.hcl"
    state: absent
  when:
    - not nomad_server
  notify:
    - restart nomad

- name: configure nomad server
  ansible.builtin.template:
    src: server.hcl.j2
    dest: "{{ nomad_config_dir }}/server.hcl"
    mode: "0640"
    owner: nomad
    group: nomad
  notify:
    - restart nomad
  when:
    - nomad_server | bool

- name: delete client config if it is not defined
  ansible.builtin.file:
    path: "{{ nomad_config_dir }}/client.hcl"
    state: absent
  when:
    - not nomad_client
  notify:
    - restart nomad

- name: configure nomad client
  ansible.builtin.template:
    src: client.hcl.j2
    dest: "{{ nomad_config_dir }}/client.hcl"
    mode: "0640"
    owner: nomad
    group: nomad
  notify:
    - restart nomad
  when:
    - nomad_client | bool

- name: create host volumes
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: "{{ item.mode | default('0755') }}"
    owner: "{{ item.owner | default('nomad') }}"
    group: "{{ item.group | default('nomad') }}"
    state: directory
  loop: "{{ nomad_client_host_volumes }}"
  notify:
    - restart nomad

- name: start nomad
  ansible.builtin.service:
    name: nomad
    state: started
    enabled: yes
