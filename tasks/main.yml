---
# tasks file for nomad

- name: Import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: true
  delegate_to: localhost

- name: Install nomad
  ansible.builtin.package:
    name: nomad
    state: present
  when:
    - nomad_install_package

- name: Create nomad_config_dir
  ansible.builtin.file:
    path: "{{ nomad_config_dir }}"
    state: directory
    owner: nomad
    group: nomad
    mode: 0750

- name: Create nomad_data_dir
  ansible.builtin.file:
    path: "{{ nomad_data_dir }}"
    state: directory
    owner: nomad
    group: nomad
    mode: 0755

- name: Configure nomad
  ansible.builtin.template:
    src: nomad.hcl.j2
    dest: "{{ nomad_config_dir }}/nomad.hcl"
    owner: nomad
    group: nomad
    mode: 0640
  notify:
    - Restart nomad

- name: Configure nomad environment
  ansible.builtin.template:
    src: nomad.env.j2
    dest: "{{ nomad_config_dir }}/nomad.env"
    owner: nomad
    group: nomad
    mode: 0640
  notify:
    - Restart nomad

- name: Delete server config if it is not defined
  ansible.builtin.file:
    path: "{{ nomad_config_dir }}/server.hcl"
    state: absent
  when:
    - not nomad_server
  notify:
    - Restart nomad

- name: Configure nomad server
  ansible.builtin.template:
    src: server.hcl.j2
    dest: "{{ nomad_config_dir }}/server.hcl"
    owner: nomad
    group: nomad
    mode: 0640
  notify:
    - Restart nomad
  when:
    - nomad_server

- name: Delete client config if it is not defined
  ansible.builtin.file:
    path: "{{ nomad_config_dir }}/client.hcl"
    state: absent
  when:
    - not nomad_client
  notify:
    - Restart nomad

- name: Store docker auth config
  ansible.builtin.copy:
    content: "{{ nomad_docker_auth_config }}"
    dest: "{{ nomad_docker_auth_file }}"
    owner: root
    group: root
    mode: 0640
  when:
    - nomad_docker_auth_enabled

- name: Configure nomad client
  ansible.builtin.template:
    src: client.hcl.j2
    dest: "{{ nomad_config_dir }}/client.hcl"
    owner: nomad
    group: nomad
    mode: 0640
  notify:
    - Restart nomad
  when:
    - nomad_client

- name: Create host volumes
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: "{{ item.owner | default('nomad') }}"
    group: "{{ item.group | default('nomad') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: directory
  loop: "{{ nomad_client_host_volumes }}"
  notify:
    - Restart nomad

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Start nomad
  ansible.builtin.service:
    name: nomad
    state: started
    enabled: true
